$date
	Sat Apr  7 11:43:24 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 32 ! out [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module uut $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 32 & temp3 [31:0] $end
$var wire 32 ' temp2 [31:0] $end
$var wire 32 ( temp1 [31:0] $end
$var wire 32 ) out [31:0] $end
$scope module alu1 $end
$var wire 32 * alu_a [31:0] $end
$var wire 32 + alu_b [31:0] $end
$var wire 5 , alu_op [4:0] $end
$var wire 32 - alu_out [31:0] $end
$var reg 32 . temp [31:0] $end
$upscope $end
$scope module alu2 $end
$var wire 32 / alu_a [31:0] $end
$var wire 32 0 alu_b [31:0] $end
$var wire 5 1 alu_op [4:0] $end
$var wire 32 2 alu_out [31:0] $end
$var reg 32 3 temp [31:0] $end
$upscope $end
$scope module alu3 $end
$var wire 32 4 alu_a [31:0] $end
$var wire 32 5 alu_b [31:0] $end
$var wire 5 6 alu_op [4:0] $end
$var wire 32 7 alu_out [31:0] $end
$var reg 32 8 temp [31:0] $end
$upscope $end
$scope module alu4 $end
$var wire 32 9 alu_a [31:0] $end
$var wire 32 : alu_b [31:0] $end
$var wire 5 ; alu_op [4:0] $end
$var wire 32 < alu_out [31:0] $end
$var reg 32 = temp [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 =
b0 <
b1 ;
b0 :
b0 9
b0 8
b0 7
b1 6
b0 5
b0 4
b0 3
b0 2
b1 1
b0 0
b0 /
b0 .
b0 -
b1 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100000
b10000 !
b10000 )
b10000 <
b10000 =
b1010 &
b1010 7
b1010 :
b1010 8
b110 '
b110 2
b110 5
b110 9
b110 3
b100 (
b100 -
b100 0
b100 4
b100 .
b10 #
b10 %
b10 +
b10 /
b10 "
b10 $
b10 *
#200000
