$date
	Thu Apr 12 18:14:20 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 32 ! out [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module uut $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 32 & temp3 [31:0] $end
$var wire 32 ' temp2 [31:0] $end
$var wire 32 ( temp1 [31:0] $end
$var wire 32 ) out [31:0] $end
$scope module alu1 $end
$var wire 32 * alu_a [31:0] $end
$var wire 32 + alu_b [31:0] $end
$var wire 5 , alu_op [4:0] $end
$var reg 32 - alu_out [31:0] $end
$upscope $end
$scope module alu2 $end
$var wire 32 . alu_a [31:0] $end
$var wire 32 / alu_b [31:0] $end
$var wire 5 0 alu_op [4:0] $end
$var reg 32 1 alu_out [31:0] $end
$upscope $end
$scope module alu3 $end
$var wire 32 2 alu_a [31:0] $end
$var wire 32 3 alu_b [31:0] $end
$var wire 5 4 alu_op [4:0] $end
$var reg 32 5 alu_out [31:0] $end
$upscope $end
$scope module alu4 $end
$var wire 32 6 alu_a [31:0] $end
$var wire 32 7 alu_b [31:0] $end
$var wire 5 8 alu_op [4:0] $end
$var reg 32 9 alu_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 9
b1 8
b0 7
b0 6
b0 5
b1 4
b0 3
b0 2
b0 1
b1 0
b0 /
b0 .
b0 -
b1 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100000
b10000 !
b10000 )
b10000 9
b1010 &
b1010 5
b1010 7
b110 '
b110 1
b110 3
b110 6
b100 (
b100 -
b100 /
b100 2
b10 #
b10 %
b10 +
b10 .
b10 "
b10 $
b10 *
#200000
